plugins {
	id 'babric-loom' version '1.1-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

tasks.withType(JavaCompile).configureEach {
	it.options.release = 8
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
	gluedMinecraftJar()
	customMinecraftManifest.set("https://babric.github.io/manifest-polyfill/${minecraft_version}.json")
	intermediaryUrl.set("https://maven.glass-launcher.net/babric/babric/intermediary/%1\$s/intermediary-%1\$s-v2.jar")
}

repositories {
	// Used for the fabric toolchain in this project.
	maven {
		name = 'Babric'
		url = 'https://maven.glass-launcher.net/babric'
	}
	// Used for mappings.
	maven {
		name = 'Glass Releases'
		url = 'https://maven.glass-launcher.net/releases'
	}
	// Used for StationAPI and HowManyItems.
	maven {
		name = 'Glass Snapshots'
		url = 'https://maven.glass-launcher.net/snapshots'
	}
	// Used for a StationAPI dependency.
	maven {
		name = 'Froge'
		url 'https://maven.minecraftforge.net/'
	}
	// Used for projects that do not have a maven repository, but do have a GitHub repository with working build scripts.
	maven {
		name = 'Jitpack'
		url = 'https://jitpack.io'
	}
	// Used for another StationAPI dependency
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
	mavenCentral()
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.glasslauncher:bin:${project.yarn_mappings}"
	modImplementation "babric:fabric-loader:${project.loader_version}"

	implementation "org.slf4j:slf4j-api:1.8.0-beta4"
	implementation "org.apache.logging.log4j:log4j-slf4j18-impl:2.16.0"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
